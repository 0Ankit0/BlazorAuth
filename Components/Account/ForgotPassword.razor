@page "/account/forgotpassword"
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@inject UserManager<IdentityUser> UserManager
@inject NavigationManager NavigationManager

<h1>Forgot Password</h1>
<EditForm Model="forgotModel" OnValidSubmit="HandleForgotPassword">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText @bind-Value="forgotModel.Email" class="form-control" autocomplete="username" placeholder="name@example.com" />
    <button type="submit" class="w-100 btn btn-lg btn-primary">Send Reset Link</button>
</EditForm>
@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert alert-info mt-2">@statusMessage</div>
}

@code {
    private ForgotModel forgotModel = new ForgotModel();
    private string? statusMessage;

    private async Task HandleForgotPassword()
    {
        statusMessage = string.Empty;
        if (string.IsNullOrWhiteSpace(forgotModel.Email))
        {
            statusMessage = "Email is required.";
            return;
        }
        var user = await UserManager.FindByEmailAsync(forgotModel.Email);
        if (user == null)
        {
            statusMessage = "If your email is registered, a reset link will be sent.";
            return;
        }
        // Here you would generate and send the reset link
        statusMessage = "If your email is registered, a reset link will be sent (mock).";
        NavigationManager.NavigateTo("/account/forgotpasswordconfirmation");
    }
    public class ForgotModel
    {
        [Required]
        [EmailAddress]
        public string? Email { get; set; }
    }
}
